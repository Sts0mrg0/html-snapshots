//
// global-mixins
//
// The mixins exposed to the container and application that are original
// to the container itself (not vendor).
//

// -------------------------
// breakpoint(point)
// -------------------------
// Takes one argument, the breakpoint
// Accepted argument values (can be one of the following):
//   large, medium, medium-portrait, medium-landscape, small, small-portrait, small-landscape, 
//   very-small, very-small-portrait, very-small-landscape, super-small, super-small-portrait,
//   super-small-landscape
// These values are defined in container-settings.scss
//
@mixin breakpoint($point) {
  @if $point == large {
    @media only screen and (min-width: $breakLargeMin) { @content; }
  }
  @else if $point == medium {
    @media only screen and (max-width: $breakMediumMax) and (min-width: $breakMediumMin) { @content; }
  }
  @else if $point == medium-portrait {
    @media screen and (orientation: portrait) and (max-width: $breakMediumPortraitMax) and (min-width: $breakMediumPortraitMin) { @content; }
  }
  @else if $point == medium-landscape {
    @media screen and (orientation: landscape) and (max-width: $breakMediumLandscapeMax) and (min-width: $breakMediumLandscapeMin) { @content; }
  }
  @else if $point == medium-small {
    @media only screen and (max-width: $breakMedSmallMax) { @content; }
  }
  @else if $point == small {
    @media only screen and (max-width: $breakSmallMax) { @content; }
  }
  @else if $point == small-portrait {
    @media screen and (orientation: portrait) and (max-width: $breakSmallPortraitMax) { @content; }
  }
  @else if $point == small-landscape {
    @media screen and (orientation: landscape) and (max-width: $breakSmallLandscapeMax) { @content; }
  }
  @else if $point == very-small {
    @media only screen and (max-width: $breakVerySmallMax) { @content; }
  }
  @else if $point == very-small-portrait {
    @media only screen and (max-width: $breakVerySmallPortraitMax) { @content; }
  }
  @else if $point == very-small-landscape {
    @media screen and (orientation: landscape) and (max-width: $breakVerySmallLandscapeMax) { @content; }
  }
  @elseif $point == very-small-super-small {
    @media only screen and (max-width: $breakVerySmallSuperSmallMax) { @content; }
  }
  @else if $point == super-small {
    @media only screen and (max-width: $breakSuperSmallMax) { @content; }
  }
  @else if $point == super-small-portrait {
    @media screen and (orientation: portrait) and (max-width: $breakSuperSmallPortraitMax) { @content; }
  }
  @else if $point == super-small-landscape {
    @media screen and (orientation: landscape) and (max-width: $breakSuperSmallLandscapeMax) { @content; }
  }
  @else if $point == super-small-extra-small {
    @media only screen and (max-width: $breakSuperSmallExtraSmallMax) { @content; }
  }
  @else if $point == extra-small {
    @media only screen and (max-width: $breakExtraSmallMax) { @content; }
  }
  @else if $point == extra-small-portrait {
    @media screen and (orientation: portrait) and (max-width: $breakExtraSmallPortraitMax) { @content; }
  }
  @else if $point == extra-small-landscape {
    @media screen and (orientation: landscape) and (max-width: $breakExtraSmallPortraitMax) { @content; }
  }
  @else {
    @warn ILLEGAL ARGUMENT TO breakpoint;
    @debug ILLEGAL ARGUMENT TO breakpoint;
    @content;
  }
}

@mixin switcher($direction, $point) {
  float: $direction;
  @include breakpoint($point) {
    @if ($direction == left) {
      float: right;
    }
    @else {
      float: left;
    }
  }
}